import threading
import time
from django.db.models.signals import post_save
from django.dispatch import receiver
from .models import StreamerStatus, StreamerHydraSettings, HydraBotSettings

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è —Å–∏–≥–Ω–∞–ª–∞
_last_signal_time = 0
_signal_lock = threading.Lock()

def _is_signal_throttled():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ —Å–ª–∏—à–∫–æ–º –ª–∏ —á–∞—Å—Ç–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç —Å–∏–≥–Ω–∞–ª—ã"""
    global _last_signal_time
    current_time = time.time()
    with _signal_lock:
        if current_time - _last_signal_time < 5:  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–æ 5 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É —Å–∏–≥–Ω–∞–ª–∞–º–∏
            return True
        _last_signal_time = current_time
        return False

@receiver(post_save, sender=StreamerStatus, weak=False)
def update_streamer_hydra_settings(sender, instance, created, **kwargs):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ì–∏–¥—Ä—ã –¥–ª—è —Å—Ç—Ä–∏–º–µ—Ä–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
    """
    if _is_signal_throttled():
        print(f"‚è∏Ô∏è –°–∏–≥–Ω–∞–ª –ø—Ä–æ–ø—É—â–µ–Ω (throttled) –¥–ª—è —Å—Ç—Ä–∏–º–µ—Ä–∞ {instance.vid}")
        return
        
    try:
        print(f"üîî –°–∏–≥–Ω–∞–ª —Å—Ä–∞–±–æ—Ç–∞–ª –¥–ª—è —Å—Ç—Ä–∏–º–µ—Ä–∞ {instance.vid}, is_hydra_enabled={instance.is_hydra_enabled}")
        
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        hydra_settings, created = StreamerHydraSettings.objects.get_or_create(
            streamer=instance,
            defaults={
                'is_active': instance.is_hydra_enabled,
                'message_interval': None,
                'cycle_interval': None
            }
        )
        
        if not created:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            hydra_settings.is_active = instance.is_hydra_enabled
            hydra_settings.save()
        
        print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ì–∏–¥—Ä—ã –¥–ª—è —Å—Ç—Ä–∏–º–µ—Ä–∞ {instance.vid}: is_active={hydra_settings.is_active}")
        
        # –ï—Å–ª–∏ —Å—Ç—Ä–∏–º–µ—Ä –æ—Ç–∫–ª—é—á–µ–Ω, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É
        if not instance.is_hydra_enabled:
            print(f"üõë –°—Ç—Ä–∏–º–µ—Ä {instance.vid} –æ—Ç–∫–ª—é—á–µ–Ω, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É...")
            
            def stop_in_thread():
                import time as time_module
                time_module.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
                
                try:
                    from .auto_message_sender import stop_auto_messaging, get_auto_message_sender
                    sender = get_auto_message_sender()
                    
                    if sender.is_running:
                        print(f"üõë –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ —Å—Ç—Ä–∏–º–µ—Ä–∞ {instance.vid}")
                        stop_auto_messaging()
                        
                        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
                        time_module.sleep(2)
                        if sender.is_running:
                            print(f"‚ö†Ô∏è –°–µ—Ä–≤–∏—Å –≤—Å–µ –µ—â–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...")
                            sender.stop()
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ –¥–ª—è {instance.vid}: {e}")
            
            threading.Thread(target=stop_in_thread, daemon=True).start()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ì–∏–¥—Ä—ã –¥–ª—è {instance.vid}: {e}")


@receiver(post_save, sender=StreamerHydraSettings)
def restart_hydra_on_streamer_settings_change(sender, instance, created, **kwargs):
    """
    –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –ì–∏–¥—Ä—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å—Ç—Ä–∏–º–µ—Ä–∞
    """
    if _is_signal_throttled():
        print(f"‚è∏Ô∏è –°–∏–≥–Ω–∞–ª –ø—Ä–æ–ø—É—â–µ–Ω (throttled) –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å—Ç—Ä–∏–º–µ—Ä–∞ {instance.streamer.vid}")
        return
        
    try:
        print(f"üîî –°–∏–≥–Ω–∞–ª: —Å—Ç—Ä–∏–º–µ—Ä {instance.streamer.vid}, is_active={instance.is_active}, global_enabled=True")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        from .auto_message_sender import restart_auto_messaging, get_auto_message_sender, stop_auto_messaging
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        def restart_in_thread():
            import time as time_module
            time_module.sleep(3)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–∞—É–∑—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            instance.refresh_from_db()
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
            sender = get_auto_message_sender()
            current_running = sender.is_running
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ì–∏–¥—Ä—ã
            from .models import HydraBotSettings
            global_settings = HydraBotSettings.get_settings()
            
            print(f"üîî –°–∏–≥–Ω–∞–ª: —Å—Ç—Ä–∏–º–µ—Ä {instance.streamer.vid}, is_active={instance.is_active}, global_enabled={global_settings.is_enabled}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç—Ä–∏–º–µ—Ä—ã –≤ –≥–∏–¥—Ä–µ
            active_streamers = StreamerStatus.objects.filter(
                is_hydra_enabled=True,
                assigned_user__isnull=False
            ).count()
            
            print(f"üîç –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–∏–º–µ—Ä–æ–≤ –≤ –≥–∏–¥—Ä–µ: {active_streamers}")
            
            if global_settings.is_enabled and instance.is_active and active_streamers > 0:
                if current_running:
                    print(f"üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –ì–∏–¥—Ä—É –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å—Ç—Ä–∏–º–µ—Ä–∞ {instance.streamer.vid}...")
                    restart_auto_messaging()
                else:
                    print(f"üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –ì–∏–¥—Ä—É –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å—Ç—Ä–∏–º–µ—Ä–∞ {instance.streamer.vid}...")
                    restart_auto_messaging()
            else:
                if current_running:
                    print(f"üõë –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –û–¢–ö–õ–Æ–ß–ê–ï–ú –±–æ—Ç–∞ –ì–∏–¥—Ä—É –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å—Ç—Ä–∏–º–µ—Ä–∞ {instance.streamer.vid}...")
                    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
                    stop_auto_messaging()
                    
                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
                    time_module.sleep(5)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
                    if sender.is_running:
                        print(f"‚ö†Ô∏è –°–µ—Ä–≤–∏—Å –≤—Å–µ –µ—â–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...")
                        sender.stop()
                else:
                    print(f"‚è∏Ô∏è –ë–æ—Ç –ì–∏–¥—Ä–∞ —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å—Ç—Ä–∏–º–µ—Ä–∞ {instance.streamer.vid}")
        
        threading.Thread(target=restart_in_thread, daemon=True).start()
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ì–∏–¥—Ä—ã –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å—Ç—Ä–∏–º–µ—Ä–∞: {e}")
        import traceback
        traceback.print_exc()


@receiver(post_save, sender=HydraBotSettings)
def restart_hydra_on_settings_change(sender, instance, created, **kwargs):
    """
    –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –ì–∏–¥—Ä—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    """
    if _is_signal_throttled():
        print(f"‚è∏Ô∏è –°–∏–≥–Ω–∞–ª HydraBotSettings –ø—Ä–æ–ø—É—â–µ–Ω (throttled)")
        return
        
    print(f"üîî –°–ò–ì–ù–ê–õ –°–†–ê–ë–û–¢–ê–õ: HydraBotSettings post_save")
    print(f"üîî created={created}, is_enabled={instance.is_enabled}")
    
    # –ù–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
    if created:
        print("‚è∏Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏")
        return
        
    try:
        print(f"üîî –°–∏–≥–Ω–∞–ª HydraBotSettings: is_enabled={instance.is_enabled}")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        from .auto_message_sender import restart_auto_messaging, get_auto_message_sender, stop_auto_messaging
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        def restart_in_thread():
            import time as time_module
            time_module.sleep(3)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–∞—É–∑—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            instance.refresh_from_db()
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
            sender = get_auto_message_sender()
            current_running = sender.is_running
            
            print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: is_enabled={instance.is_enabled}, current_running={current_running}")
            
            if instance.is_enabled:
                if current_running:
                    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –ì–∏–¥—Ä—É...")
                    restart_auto_messaging()
                else:
                    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –ì–∏–¥—Ä—É...")
                    restart_auto_messaging()
            else:
                if current_running:
                    print("üõë –û—Ç–∫–ª—é—á–∞–µ–º –±–æ—Ç–∞ –ì–∏–¥—Ä—É...")
                    stop_auto_messaging()
                    
                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
                    time_module.sleep(5)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
                    if sender.is_running:
                        print("‚ö†Ô∏è –°–µ—Ä–≤–∏—Å –≤—Å–µ –µ—â–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...")
                        sender.stop()
                else:
                    print("‚è∏Ô∏è –ë–æ—Ç –ì–∏–¥—Ä–∞ —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω")
        
        threading.Thread(target=restart_in_thread, daemon=True).start()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ì–∏–¥—Ä—ã: {e}")
        import traceback
        traceback.print_exc() 